
LAB NAME: DOM XSS IN document.write SINK USING SOURCE location.search INSIDE A SELECT ELEMENT

DESCRIPTION
This lab contains a DOM-based cross-site scripting vulnerability in the stock checker functionality. It uses the JavaScript document.write 
function, which writes data out to the page. The document.write function is called with data from location.search which you can control using 
the website URL. The data is enclosed within a select element.
To solve this lab, perform a cross-site scripting attack that breaks out of the select element and calls the alert function.

DIFFICULTY LEVEL: Practitioner.

LAB LINK: https://portswigger.net/web-security/cross-site-scripting/dom-based/lab-document-write-sink-inside-select-element

STEPS I USED TO SOLVE THIS LAB
- Run lab in Burp browser.
- Navigated to check stock function in lab.
- Chose an arbituary city and checked stock.
- Right click on page and then "Inspect" and "elements'
- I found that the 'storeId' query parameter was checked for value and if it had an assigned value, it was added to the remaining options as a 'selected option'.
- I added a selectId parameter to the url to confirm what i found out.
 https://0a460039043b1279811f9875006300d1.web-security-academy.net/product?productId=3&storeId=lagos
- 'lagos' was added to the list of options and was automatically selected.
- 'lagos' was wrapped in an options tag in the select element so I constructed my payload to break out of the options tag and call the alert function
- I added the payload: &storeId=lagos"><script>alert('XSS')</script> to the url and the alert box popped up.
